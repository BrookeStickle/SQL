-- Which genre is the most popular in the Czech Repbulic? 
SELECT genres.Name, COUNT(genres.Name) as genre_count, customers.Country
FROM genres 
Join tracks on genres.GenreId=tracks.GenreId
JOIN invoice_items as items on tracks.TrackId=items.TrackId
JOIN invoices on items.InvoiceId=invoices.InvoiceId
JOIN customers on invoices.CustomerId=customers.CustomerId 
WHERE customers.Country='Czech Republic'
GROUP BY genres.Name, customers.Country
ORDER BY genre_count desc
LIMIT 1;

-- What song shows up on the most playlists?
Select tracks.Name, COUNT(pt.Playlistid) as number_of_playlists 
FROM tracks
JOIN playlist_track as pt on tracks.TrackId=pt.Trackid
GROUP BY tracks.Name
ORDER By number_of_playlists desc
LIMIT 1;

-- Popularity of Rock Music in different countries. 
SELECT genres.Name, COUNT(genres.Name) as genre_count, customers.Country,
CASE WHEN COUNT(genres.Name) >=100 THEN 'Loves Rock'
WHEN COUNT(genres.Name) >=25 THEN 'Likes Rock'
WHEN COUNT(genres.Name) >=15 THEN 'Dabbles in Rock'
ELSE 'Needs Promoting Ideas'
END AS Rock_Music_Popularity
FROM genres 
Join tracks on genres.GenreId=tracks.GenreId
JOIN invoice_items as items on tracks.TrackId=items.TrackId
JOIN invoices on items.InvoiceId=invoices.InvoiceId
JOIN customers on invoices.CustomerId=customers.CustomerId 
WHERE genres.Name='Rock'
GROUP BY genres.Name, customers.Country
ORDER BY genre_count desc;


-- Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, Customerid, Country
FROM customers
WHERE country <> 'USA';

-- Show only the customers from Brazil
SELECT *
FROM customers
WHERE country='Brazil';

-- Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.BillingCountry, invoices.InvoiceDate
FROM customers
JOIN invoices on customers.CustomerId=invoices.CustomerId
WHERE customers.Country='Brazil';

-- Show the Employees who are Sales Agents.
SELECT *
FROM employees
WHERE Title = 'Sales Support Agent';

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM invoices;

-- Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.LastName, employees.FirstName, invoices.InvoiceId 
FROM employees
JOIN customers on employees.EmployeeId=customers.SupportRepId
JOIN invoices on customers.CustomerId=invoices.CustomerId;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT employees.FirstName as agent_first_name, employees.LastName as agent_last_name, customers.FirstName as customer_first_name, customers.LastName as customer_last_name , customers.Country,  invoices.Total
FROM invoices
JOIN customers on invoices.CustomerId=customers.CustomerId
JOIN employees on customers.SupportRepId=employees.EmployeeId; 

-- How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate like '2009%';

-- What are the total sales for 2009?
SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate like '2009%';

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name, invoice_items.Invoiceid
FROM tracks
JOIN invoice_items on tracks.Trackid=invoice_items.Trackid;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT artists.Name as artist, tracks.Name as track, invoice_items.Invoiceid 
FROM invoice_items
LEFT JOIN tracks on invoice_items.Trackid=tracks.Trackid
JOIN albums on tracks.Albumid=albums.Albumid
LEFT JOIN artists on albums.Artistid=artists.Artistid;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name as track, albums.Title as album_title, genres.Name as genre, media_types.Name as media_type
FROM tracks
JOIN genres on tracks.Genreid = genres.Genreid
JOIN media_types on tracks.MediaTypeid=media_types.MediaTypeid
JOIN albums on tracks.Albumid=albums.Albumid;

-- Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, 
ROUND(SUM(invoices.Total),2) as Total_Sales
FROM employees
JOIN customers on employees.EmployeeId=customers.SupportRepId
JOIN invoices on customers.CustomerId=invoices.CustomerId
GROUP By employees.FirstName, employees.LastName;

-- Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total),2) as total_sales
FROM employees
JOIN customers on employees.EmployeeId=customers.SupportRepId
JOIN invoices on customers.CustomerId=invoices.CustomerId
WHERE invoices.InvoiceDate between '2009-01-01' AND '2009-12-31'
GROUP By employees.FirstName, employees.LastName
ORDER BY total_sales desc
LIMIT 1;
