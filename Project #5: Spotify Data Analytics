-- For this project I explored a Spotify dataset using SQL.

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM Spotifydata;

-- Who has the most popular song?
-- Both Olivia Rodrigo and Ed Sheeran have a song with the highest popularity rating.
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc;

-- Ed Sheeran has one song and Olivia Rodrigo has four songs on this list. 
SELECT artist_name, COUNT(track_name)
FROM BIT_DB.Spotifydata
WHERE artist_name='Olivia Rodrigo'
OR artist_name='Ed Sheeran'
GROUP BY artist_name;

-- Olivia Rodrigo's songs all have a popular rating of at least 90. 
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
WHERE artist_name='Olivia Rodrigo'
ORDER BY popularity desc;


-- Does having a higher danceability rating indicate how popular a song is? 
-- There is only one Very Popular song with a danceability rating higher than .8.
SELECT track_name, danceability,
CASE WHEN popularity >=90 THEN 'Very Popular'
WHEN popularity >=80 THEN 'Popular'
ELSE 'Not Popular'
END AS level_of_popularity
FROM BIT_DB.Spotifydata
WHERE danceability>=.8
GROUP BY track_name
ORDER BY danceability desc;

-- Stats of the Very Popular songs.
SELECT track_name, energy, loudness, tempo,
CASE WHEN popularity >=90 THEN 'Very Popular'
WHEN popularity >=80 THEN 'Popular'
ELSE 'Not Popular'
END AS level_of_popularity
FROM BIT_DB.Spotifydata
WHERE level_of_popularity = 'Very Popular'
GROUP BY track_name;

-- The average tempo of Very Popular songs is faster than Popular and Not Popular songs. 
-- Energy, loudness, danceability, and song_key do not seem to be predictors of whether a song will be popular or not. 
SELECT CASE WHEN popularity >=90 THEN 'Very Popular'
WHEN popularity >=80 THEN 'Popular'
ELSE 'Not Popular'
END AS level_of_popularity, 
AVG(energy), AVG(loudness), AVG(tempo), AVG(danceability), AVG(song_key)
FROM BIT_DB.Spotifydata
GROUP BY level_of_popularity
ORDER BY popularity desc;
